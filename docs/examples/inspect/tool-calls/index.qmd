---
title: "Tool Calls"
subtitle: "Dataset: [cybench_tools.parquet](cybench_tools.parquet)"
---

This example illustrates the code behind the [`tool_calls()`](../../../reference/inspect_viz.view.qmd#tool_calls) pre-built view function. If you want to include this plot in your notebooks or websites you should start with that function rather than the lower-level code below.

The plot visualizes tool usage over a series of turns in a Cybench evaluation. We use a `cell()` mark to visualize tool use over messages in each sample of an evaluation. We note any limit that ended the sample using a `text()` mark on the right side of the frame. 


```{python}
#| filename: Code

from inspect_viz import Data
from inspect_viz.plot import plot, legend
from inspect_viz.mark import cell, text
from inspect_viz.transform import first

# read data (see 'Data Preparation' below)
data = Data.from_file("cybench_tools.parquet") # <1>

tools = ["bash", "python", "submit"]

plot(
    cell( # <2>
        data,
        x="order",
        y="id",
        fill="tool_call_function"
    ), # <2>
    
    text( # <3>
        data, 
        text=first("limit"), 
        y="id",
        frame_anchor="right", 
        font_size=8, 
        font_weight=200,
        dx=50
    ),  # <3>
    legend=legend("color", location="right"),
    margin_top=0,   # <4>
    margin_left=20,
    margin_right=100,  # <4>
    x_ticks=list(range(0, 400, 80)), # <5>
    y_ticks=[], # <5>
    x_label="Message", # <6>
    y_label="Sample",  # <6>
    color_label="Tool",  # <6>
    color_domain=tools # <7>
)
```

1. Read tool call data (see [Data Preparation](../../../view-tool-calls.qmd#data-preparation) for details).

2. `cell()` mark showing tool calls.

3. `text()` mark showing whether the sample terminated due to a limit.

4. Tweak the margins so the axis labels and text annotations appear correctly.

5. Reduce the number of tick marks on the x-axis and eliminate y-ticks.

6. Set some custom labels and ensure that tools follow our designed order.

7. Specify which tools we should show and in what order.
