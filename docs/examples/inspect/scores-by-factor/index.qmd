



```{python}
from inspect_viz import Data
from inspect_viz.plot import plot, legend
from inspect_viz.mark import Mark, bar_x, rule_y, frame
from inspect_viz.transform import sql, ci_bounds

evals = Data.from_file("evals.csv")

y_offset = 10

ci = 0.95

colors = ["#3266ae", "#91b7e5"]

factor = "task_arg_hint"
factor_labels = [ 'No hint', 'Hint']

score = "score_overall_value"
stderr = "score_overall_stderr"

y = "model"


ci_lower, ci_upper = ci_bounds(
    ci, 
    score=score, 
    stderr=stderr
)

def score_rule(factor_value: bool) -> Mark:
    offset = y_offset if factor_value else -y_offset
    return rule_y(
        evals,
        x=score,
        y=y,
        filter=sql(f"{factor} = {factor_value}"),
        dy=offset,
        sort= { "y": "-x" },
        stroke=sql(f"IF(NOT {factor}, '{factor_labels[0]}', '{factor_labels[1]}')"),
        stroke_width=3,
        stroke_linecap="round",
        marker_end="circle"
    )

def ci_rule(factor_value: bool) -> Mark:
    offset = y_offset if factor_value else -y_offset
    return rule_y(
        evals,
        x1=ci_lower,
        x2=ci_upper,
        y=y,
        filter=sql(f"{factor} = {factor_value}"),
        dy=offset,
        sort= { "y": "-x" },
        stroke=f"{colors[0]}20",
        stroke_width=15,
    )


plot(
    frame("left", inset_top=15, inset_bottom=15),
    score_rule(False),
    score_rule(True),
    ci_rule(False),
    ci_rule(True),
    legend=legend("color"),
    margin_left=100,
    y_label=None,
    x_label="score",
    color_domain=factor_labels,
    color_range=colors,
    y_tick_size=0,
    
)

```
